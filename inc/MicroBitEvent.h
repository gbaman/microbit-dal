#ifndef MICROBIT_EVENT
#define MICROBIT_EVENT

#include "mbed.h"

/**
  * Class definition for a MicrobitEvent
  * It represents a common event that is generated by the various components on the MB.
  */
class MicroBitEvent
{
    public:

    //These are public at the moment for backwards compatability with old code
    //will be refactored in the future!
    
    int source;         // ID of the MicroBit Component that generated the event e.g. MICROBIT_ID_BUTTON_A. 
    int value;          // Component specific code indicating the cause of the event.
    int timestamp;      // Time at which the event was generated. ms since power on.
    void *context;      // context specfic data associated with the event. 

    /**
      * Constructor. 
      * @param src ID of the MicroBit Component that generated the event e.g. MICROBIT_ID_BUTTON_A.
      * @param value Component specific code indicating the cause of the event.
      * @param timestamp Time at which the event was generated. ms since power on.
      * @param context context specfic data associated with the event.
      * @param fire whether the event should be fire immediately upon construction
      * 
      * Example:
      * @code 
      * MicrobitEvent evt(id,MICROBIT_BUTTON_EVT_CLICK,ticks,NULL,true); // auto fire
      * @endcode
      */
    
    MicroBitEvent(int source, int value, int timestamp, void *context, bool fire=false);  
    
    //empty constructor. 
    MicroBitEvent(); 

    /**
      * Default constructor - initialises all values to 0.
      */
    void fire();
};

#endif

